// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UI_USM_MVC.Data;

#nullable disable

namespace UI_USM_MVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240921132944_FixTasksDateTypes")]
    partial class FixTasksDateTypes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("UI_USM_MVC.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Address1")
                        .HasColumnType("longtext");

                    b.Property<string>("Address2")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("CountryCode")
                        .HasColumnType("longtext");

                    b.Property<int?>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<bool>("Notification")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int");

                    b.Property<string>("PreferedNottification")
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .HasColumnType("longtext");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.Property<string>("Zip")
                        .HasColumnType("longtext");

                    b.HasKey("ClientId");

                    b.HasIndex("OrgId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("UI_USM_MVC.Models.Crew", b =>
                {
                    b.Property<int>("CrewtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CrewtId"));

                    b.Property<string>("CountryCode")
                        .HasColumnType("longtext");

                    b.Property<int?>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<int?>("OrgId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("CrewtId");

                    b.ToTable("Crew");
                });

            modelBuilder.Entity("UI_USM_MVC.Models.Events", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EventId"));

                    b.Property<bool>("AllDay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ClassName")
                        .HasColumnType("longtext");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .HasColumnType("longtext");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.Property<int?>("CrewId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("EventId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("UI_USM_MVC.Models.Marketing", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AutoId"));

                    b.Property<string>("Descriptions")
                        .HasColumnType("longtext");

                    b.Property<string>("OrgId")
                        .HasColumnType("longtext");

                    b.Property<string>("Section")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("AutoId");

                    b.ToTable("Marketing");
                });

            modelBuilder.Entity("UI_USM_MVC.Models.Organization", b =>
                {
                    b.Property<int>("OrgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrgId"));

                    b.Property<string>("OrgName")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("Twillo")
                        .HasColumnType("longtext");

                    b.HasKey("OrgId");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("UI_USM_MVC.Models.Services", b =>
                {
                    b.Property<int>("ServicesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ServicesId"));

                    b.Property<string>("Deal")
                        .HasColumnType("longtext");

                    b.Property<string>("Descriptions")
                        .HasColumnType("longtext");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<double?>("price")
                        .HasColumnType("double");

                    b.HasKey("ServicesId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("UI_USM_MVC.Models.Tasks", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<int?>("CrewId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataStart")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateExpired")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descriptions")
                        .HasColumnType("longtext");

                    b.Property<int?>("OrgId")
                        .HasColumnType("int");

                    b.Property<string>("Section")
                        .HasColumnType("longtext");

                    b.Property<string>("SectionColor")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.HasKey("TaskId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("UI_USM_MVC.Models.Client", b =>
                {
                    b.HasOne("UI_USM_MVC.Models.Organization", "Organization")
                        .WithMany("Client")
                        .HasForeignKey("OrgId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("UI_USM_MVC.Models.Organization", b =>
                {
                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
