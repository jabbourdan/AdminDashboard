@{
    Layout = "~/Views/Shared/_Layout.cshtml"; // Use your layout if needed
    ViewBag.Title = "Schedule";
}

<main>
    <div class="header">
        <div class="left">
            <h1>Schedule</h1>
        </div>
    </div>

    <!-- Add FullCalendar HTML here -->
    <div id="wrap">
        <div id="calendar"></div>
        <div style="clear: both;"></div>
    </div>

    @* <!-- Side Menu Form for Adding a Task -->
    <div id="taskSideMenu" class="side-menu">
        <div class="side-menu-content centered-container">
            <button type="button" class="close" aria-label="Close" onclick="closeSideMenu()"
                style="position: absolute; top: 10px; right: 10px; font-size: 1.5rem; background: none; border: none; color: #000; cursor: pointer;">
                &times;
            </button>
            <h5>Add New Event</h5>
            <div class="progress-bar">
                <div class="steps-container">
                    <div class="step completed">
                        <div class="circle">1</div>
                        <div class="label">Client</div>
                    </div>
                    <div class="step">
                        <div class="circle">2</div>
                        <div class="label">Time</div>
                    </div>
                    <div class="step">
                        <div class="circle">3</div>
                        <div class="label">Service</div>
                    </div>
                    <div class="step">
                        <div class="circle">4</div>
                        <div class="label">Done</div>
                    </div>
                </div>
            </div>

            <!-- Step 1: Client Selection -->
            <div class="step-content" id="step1">
                <label for="clientSelect">Client Name</label>
                <select class="form-control" id="clientSelect">
                    <option value="">Select Client</option>
                </select>
                <div class="text-center">
                    <button class="btn btn-outline-secondary" onclick="addNewClient()">Add New Client</button>
                </div>
            </div>

            <!-- Step 2: Time Selection -->
            <div class="step-content" id="step2" style="display: none;">
                <div class="form-group">
                    <label for="pickDate">Pick Date</label>
                    <input type="date" class="form-control" id="pickDate" />
                </div>
                <div class="form-group">
                    <label for="startTime">Start Time</label>
                    <input type="time" class="form-control" id="startTime" />
                </div>
                <div class="form-group">
                    <label for="endTime">End Time</label>
                    <input type="time" class="form-control" id="endTime" />
                </div>
            </div>

            <!-- Step 3: Service Selection -->
            <div class="step-content" id="step3" style="display: none;">
                <div class="form-group">
                    <label for="serviceType">Service Type</label>
                    <select class="form-control" id="serviceType">
                        <option value="service">Service</option>
                        <option value="package">Package</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="serviceList">Available Services</label>
                    <select class="form-control" id="serviceList">
                        <option value="service1">Service 1</option>
                        <option value="service2">Service 2</option>
                        <option value="service3">Service 3</option>
                    </select>
                </div>
                <div class="text-center">
                    <button class="btn btn-outline-secondary" onclick="addNewService()">Add New Client</button>
                </div>
                <div class="text-center">
                    <button class="btn btn-outline-secondary" onclick="addNewPackage()">Add New Package</button>
                </div>
            </div>

            <!-- Step 4: Done -->
            <div class="step-content" id="step4" style="display: none;">
                <h3 class="text-success">Event Created!</h3>
                <div class="d-flex justify-content-center align-items-center" style="height: 100px;">
                    <div class="display-1 text-success">âœ“</div>
                </div>
            </div>

            <div class="form-actions-bottom">
                <button id="prevBtn" onclick="PrevSideMenu()">Prev</button>
                <button id="nextBtn" onclick="nextStep()">Next</button>
            </div>
        </div>
    </div> *@
    
    <!-- FullCalendar CSS and JS includes -->
    <link href="~/css/Schedule/fullcalendar.css" rel="stylesheet" />
    <script src="~/js/Schedule/jquery-1.10.2.js" type="text/javascript"></script>
    <script src="~/js/Schedule/jquery-ui.custom.min.js" type="text/javascript"></script>
    <script src="~/js/Schedule/fullcalendar.js" type="text/javascript"></script>

    <!-- Moment.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

    <!-- Moment-Timezone.js -->
    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.34/moment-timezone-with-data.min.js"></script>

    <script>
        $(document).ready(function () {
            // Initialize FullCalendar
            $('#calendar').fullCalendar({
                timeZone: 'UTC',
                header: {
                    left: 'title',
                    center: 'agendaDay,agendaWeek,month',
                    right: 'prev,next today'
                },
                editable: true,
                firstDay: 1,
                selectable: true,
                defaultView: 'agendaWeek',
                allDaySlot: false,
                selectHelper: true,

                select: function (start, end, allDay) {
                    var title = prompt('Event Title:');
                    var clientName = prompt('Client Name:');
                    var className = prompt('Class Name (e.g., business-event, personal-event):');

                    if (title) {
                        var adjustedStart = moment(start).add(3, 'hours');
                        var adjustedEnd = end ? moment(end).add(3, 'hours') : null;

                        var newEvent = {
                            title: title,
                            clientName: clientName,
                            start: adjustedStart,
                            end: adjustedEnd,
                            allDay: false,
                            className: className
                        };

                        $.ajax({
                            url: '/Schedule/AddEvent',
                            type: 'POST',
                            data: JSON.stringify(newEvent),
                            contentType: 'application/json',
                            success: function (response) {
                                $('#calendar').fullCalendar('renderEvent', response, true);
                            },
                            error: function () {
                                alert('Failed to add event.');
                            }
                        });
                    }
                    $('#calendar').fullCalendar('unselect');
                },

                eventDrop: function (event, delta, revertFunc) {
                    var adjustedStart = moment(event.start).add(3, 'hours');
                    var adjustedEnd = event.end ? moment(event.end).add(3, 'hours') : null;

                    var updatedEvent = {
                        eventId: event.eventId,
                        title: event.title,
                        clientName: event.clientName,
                        start: adjustedStart,
                        end: adjustedEnd ? adjustedEnd : null,
                        allDay: event.allDay,
                        className: event.className[0]
                    };

                    $.ajax({
                        url: '/Schedule/UpdateEvent',
                        type: 'POST',
                        data: JSON.stringify(updatedEvent),
                        contentType: 'application/json',
                        success: function () {
                            console.log('Event updated successfully.');
                        },
                        error: function () {
                            alert('Failed to update event.');
                            revertFunc(); // Revert the event to its original state if the update fails
                        }
                    });
                },

                eventRender: function (event, element) {
                    element.find('.fc-title').append("<br/>" + event.clientName);

                    element.on('dblclick', function (e) {
                        e.preventDefault();
                        showContextMenu(event, e.pageX, e.pageY);
                    });
                }
            });

            $.ajax({
                url: '/Schedule/GetEvents',
                type: 'GET',
                success: function (data) {
                    $('#calendar').fullCalendar('addEventSource', data);
                },
                error: function () {
                    alert('There was an error while fetching events.');
                }
            });

            function showContextMenu(event, x, y) {
                var contextMenu = `
                <div id="contextMenu" class="context-menu" style="top:${y}px; left:${x}px;">
                    <ul>
                        <li class="edit-event">Edit</li>
                        <li class="delete-event">Delete</li>
                    </ul>
                </div>
                `;
                $('body').append(contextMenu);

                $('#contextMenu .edit-event').on('click', function () {
                    var newTitle = prompt('Edit Event Title:', event.title);
                    var newClientName = prompt('Edit Client Name:', event.clientName);
                    var newClassName = prompt('Edit Class Name (e.g., business-event, personal-event):', event.className);

                    var updatedEvent = {
                        eventId: event.eventId,
                        title: newTitle,
                        clientName: newClientName,
                        className: newClassName,
                        start: moment(event.start).add(3, 'hours'),
                        end: event.end ? moment(event.end).add(3, 'hours') : null,
                        allDay: event.allDay,
                        url: event.url,
                        color: event.color
                    };

                    $.ajax({
                        url: '/Schedule/UpdateEvent',
                        type: 'POST',
                        data: JSON.stringify(updatedEvent),
                        contentType: 'application/json',
                        success: function (response) {
                            $('#calendar').fullCalendar('removeEvents', event.EventId);
                            $('#calendar').fullCalendar('renderEvent', response, true);
                        },
                        error: function () {
                            alert('Failed to update event.');
                        }
                    });
                    $('#contextMenu').remove();
                });

                $('#contextMenu .delete-event').on('click', function () {
                    if (confirm('Are you sure you want to delete this event?')) {
                        debugger;
                        console.log("E:" + event.EventId + "e:" + event.eventId);
                        console.log(event);
                        $.ajax({
                            url: '/Schedule/DeleteEvent',
                            type: 'POST',
                            data: JSON.stringify(event.eventId),
                            contentType: 'application/json',
                            success: function () {
                                $('#calendar').fullCalendar('removeEvents', event.EventId);
                            },
                            error: function () {
                                alert('Failed to delete event.');
                            }
                        });

                    }
                    $('#contextMenu').remove();
                });

                $(document).on('click', function () {
                    $('#contextMenu').remove();
                });
            }
        });
    </script>

    <style>
        /* Full height for the calendar */
        #wrap,
        #calendar {
            height: 100%;
            width: 100%;
        }

        /* Remove any unnecessary width limits */
        #calendar {
            background-color: #FFFFFF;
            border-radius: 6px;
            box-shadow: 0 1px 2px #C3C3C3;
        }

        .context-menu {
            position: absolute;
            background-color: white;
            border: 1px solid #ccc;
            box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
            z-index: 1000;
        }

        .context-menu ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .context-menu ul li {
            padding: 8px 12px;
            cursor: pointer;
        }

        .context-menu ul li:hover {
            background-color: #ddd;
        }
    </style>
</main>
